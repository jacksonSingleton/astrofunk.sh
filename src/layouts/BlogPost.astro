---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { AUTHOR_NAME, AUTHOR_TITLE } from "../consts";
import "../styles/blog.css";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        <Header>
        </Header>
        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
            }
            .hero-image {
                width: 100%;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
            }
            .prose {
                width: 960px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
                color: var(--text);
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }
            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .date {
                margin-bottom: 0.5em;
                color: var(--love);
            }
            .last-updated-on {
                font-style: italic;
            }
        </style>
    </head>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-QJPVFD5YTY"
    ></script>
    <script is:inline>
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }
        gtag("js", new Date());

        gtag("config", "G-QJPVFD5YTY");
    </script>
    <body>
        <article>
            <div class="hero-image">
                {
                    heroImage && (
                        <img width={1020} height={510} src={heroImage} alt="" />
                    )
                }
            </div>
            <div class="prose">
                <div class="title">
                    <div class="date">
                        <FormattedDate date={pubDate} />
                        {
                            updatedDate && (
                                <div class="last-updated-on">
                                    Last updated on{" "}
                                    <FormattedDate date={updatedDate} />
                                </div>
                            )
                        }
                    </div>
                    <h1>{title}</h1>
                    <div class="author">
                        <img width={96} height={96} src="https://avatars.githubusercontent.com/u/17009633?v=4" alt="" />
                        <div class="text-block">
                            <p>{AUTHOR_NAME}</p>
                            <p>{AUTHOR_TITLE}</p>
                        </div>
                    </div>
                </div>
                <slot />
            </div>
        </article>
        <Footer />
      <script is:inline>

            const progressBar = () => {
                const progressBar = document.createElement("div");
                progressBar.id = "progress-bar";
                progressBar.style.position = "fixed";
                progressBar.style.zIndex = "10";
                progressBar.style.bottom = "1.75rem";
                progressBar.style.left = ".75rem";
                progressBar.style.width = "4.5rem";
                progressBar.style.height = "4.5rem";
                progressBar.style.borderRadius = "100%";
                progressBar.style.background = "var(--love)";
                progressBar.style.transition = "width 0.1s ease";
                progressBar.style.alignSelf = "start";

                const header = document.querySelector("header");
                header.appendChild(progressBar);

                window.addEventListener("scroll", () => {
                    const scrollableHeight = document.documentElement.scrollHeight - window.innerHeight;
                    const scrolled = window.scrollY / scrollableHeight * 100;
                    progressBar.style.background = `conic-gradient(var(--rose) ${scrolled}%, var(--love) ${scrolled}%)`;
                  progressBar.style.transform = `scale(${1 + (window.scrollY / scrollableHeight / 8)})`;
                });
            };

                document.addEventListener("DOMContentLoaded", progressBar);
        </script>
    </body>
</html>
